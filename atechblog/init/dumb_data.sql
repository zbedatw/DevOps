PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2024-09-15 14:47:24.930837');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2024-09-15 14:47:24.968912');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2024-09-15 14:47:24.999400');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2024-09-15 14:47:25.024082');
INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2024-09-15 14:47:25.044669');
INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2024-09-15 14:47:25.097259');
INSERT INTO django_migrations VALUES(7,'auth','0002_alter_permission_name_max_length','2024-09-15 14:47:25.123715');
INSERT INTO django_migrations VALUES(8,'auth','0003_alter_user_email_max_length','2024-09-15 14:47:25.146083');
INSERT INTO django_migrations VALUES(9,'auth','0004_alter_user_username_opts','2024-09-15 14:47:25.163270');
INSERT INTO django_migrations VALUES(10,'auth','0005_alter_user_last_login_null','2024-09-15 14:47:25.185464');
INSERT INTO django_migrations VALUES(11,'auth','0006_require_contenttypes_0002','2024-09-15 14:47:25.198260');
INSERT INTO django_migrations VALUES(12,'auth','0007_alter_validators_add_error_messages','2024-09-15 14:47:25.216106');
INSERT INTO django_migrations VALUES(13,'auth','0008_alter_user_username_max_length','2024-09-15 14:47:25.238656');
INSERT INTO django_migrations VALUES(14,'auth','0009_alter_user_last_name_max_length','2024-09-15 14:47:25.259324');
INSERT INTO django_migrations VALUES(15,'auth','0010_alter_group_name_max_length','2024-09-15 14:47:25.286466');
INSERT INTO django_migrations VALUES(16,'auth','0011_update_proxy_permissions','2024-09-15 14:47:25.306412');
INSERT INTO django_migrations VALUES(17,'auth','0012_alter_user_first_name_max_length','2024-09-15 14:47:25.326968');
INSERT INTO django_migrations VALUES(18,'movies','0001_initial','2024-09-15 14:47:25.354220');
INSERT INTO django_migrations VALUES(19,'sessions','0001_initial','2024-09-15 14:47:25.377060');
INSERT INTO django_migrations VALUES(20,'movies','0002_movie_thumb','2024-09-20 09:32:59.660974');
INSERT INTO django_migrations VALUES(21,'movies','0003_alter_movie_thumb','2024-09-20 09:50:46.466426');
INSERT INTO django_migrations VALUES(22,'movies','0004_review','2024-09-23 15:00:06.985906');
INSERT INTO django_migrations VALUES(23,'movies','0005_remove_movie_slug_movie_trailer_url','2024-09-28 14:59:33.904279');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL);
INSERT INTO django_admin_log VALUES(1,'1','Zbedat Family',1,'[{"added": {}}]',7,1,'2024-09-15 17:01:12.416609');
INSERT INTO django_admin_log VALUES(2,'1','Zbedat Family',2,'[]',7,1,'2024-09-15 17:01:32.273911');
INSERT INTO django_admin_log VALUES(3,'2','peace',1,'[{"added": {}}]',7,1,'2024-09-15 17:05:52.200213');
INSERT INTO django_admin_log VALUES(4,'1','Zbedat Family',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:07:40.093913');
INSERT INTO django_admin_log VALUES(5,'2','peace',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:07:54.569721');
INSERT INTO django_admin_log VALUES(6,'2','peace',2,'[]',7,1,'2024-09-20 10:08:36.753646');
INSERT INTO django_admin_log VALUES(7,'2','peace',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:13:50.207507');
INSERT INTO django_admin_log VALUES(8,'2','peace',2,'[]',7,1,'2024-09-20 10:14:02.786242');
INSERT INTO django_admin_log VALUES(9,'1','Zbedat Family',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:14:07.526120');
INSERT INTO django_admin_log VALUES(10,'1','Zbedat Family',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:16:09.143676');
INSERT INTO django_admin_log VALUES(11,'2','peace',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:16:19.736825');
INSERT INTO django_admin_log VALUES(12,'2','peace',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-20 10:33:33.627867');
INSERT INTO django_admin_log VALUES(13,'3','TEST 3',1,'[{"added": {}}]',7,1,'2024-09-20 10:37:29.102947');
INSERT INTO django_admin_log VALUES(14,'2','test',3,'',4,1,'2024-09-20 12:22:48.519750');
INSERT INTO django_admin_log VALUES(15,'4','wazwaz',3,'',4,1,'2024-09-20 12:45:06.400136');
INSERT INTO django_admin_log VALUES(16,'1','zbedatw review on Zbedat Family',1,'[{"added": {}}]',8,1,'2024-09-23 15:02:47.308493');
INSERT INTO django_admin_log VALUES(17,'2','mani review on Zbedat Family',1,'[{"added": {}}]',8,1,'2024-09-23 16:11:01.519420');
INSERT INTO django_admin_log VALUES(18,'3','zbedatw review on peace',3,'',8,1,'2024-09-25 19:18:34.789911');
INSERT INTO django_admin_log VALUES(19,'2','mani review on Zbedat Family',3,'',8,1,'2024-09-25 19:18:40.326995');
INSERT INTO django_admin_log VALUES(20,'1','zbedatw review on Zbedat Family',3,'',8,1,'2024-09-25 19:18:43.192967');
INSERT INTO django_admin_log VALUES(21,'4','zbedatw review on peace',3,'',8,1,'2024-09-25 19:22:36.020086');
INSERT INTO django_admin_log VALUES(22,'5','zbedatw review on peace',3,'',8,1,'2024-09-25 19:24:22.661866');
INSERT INTO django_admin_log VALUES(23,'3','TEST 3',3,'',7,1,'2024-09-28 14:56:04.119366');
INSERT INTO django_admin_log VALUES(24,'2','peace',3,'',7,1,'2024-09-28 14:56:10.485972');
INSERT INTO django_admin_log VALUES(25,'1','Zbedat Family',3,'',7,1,'2024-09-28 14:56:15.111579');
INSERT INTO django_admin_log VALUES(26,'1','The Shawshank Redemption',1,'[{"added": {}}]',7,1,'2024-09-28 15:08:09.556996');
INSERT INTO django_admin_log VALUES(27,'2','The Dark Knight',1,'[{"added": {}}]',7,1,'2024-09-28 15:12:10.320196');
INSERT INTO django_admin_log VALUES(28,'3','The Lord of the Rings: The Return of the King',1,'[{"added": {}}]',7,1,'2024-09-28 15:17:25.776637');
INSERT INTO django_admin_log VALUES(29,'4','Schindler''s List',1,'[{"added": {}}]',7,1,'2024-09-28 15:21:20.210551');
INSERT INTO django_admin_log VALUES(30,'5','Inception',1,'[{"added": {}}]',7,1,'2024-09-28 15:24:01.748428');
INSERT INTO django_admin_log VALUES(31,'4','Schindler''s List',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-28 15:24:46.885996');
INSERT INTO django_admin_log VALUES(32,'4','Schindler''s List',2,'[{"changed": {"fields": ["Thumb"]}}]',7,1,'2024-09-28 15:24:58.573638');
INSERT INTO django_admin_log VALUES(33,'8','zbedatw review on The Shawshank Redemption',3,'',8,1,'2024-09-30 14:54:14.126671');
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'auth','user');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'movies','movie');
INSERT INTO django_content_type VALUES(8,'movies','review');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(14,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(15,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(16,4,'view_user','Can view user');
INSERT INTO auth_permission VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(21,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(22,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(23,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(24,6,'view_session','Can view session');
INSERT INTO auth_permission VALUES(25,7,'add_movie','Can add movie');
INSERT INTO auth_permission VALUES(26,7,'change_movie','Can change movie');
INSERT INTO auth_permission VALUES(27,7,'delete_movie','Can delete movie');
INSERT INTO auth_permission VALUES(28,7,'view_movie','Can view movie');
INSERT INTO auth_permission VALUES(29,8,'add_review','Can add review');
INSERT INTO auth_permission VALUES(30,8,'change_review','Can change review');
INSERT INTO auth_permission VALUES(31,8,'delete_review','Can delete review');
INSERT INTO auth_permission VALUES(32,8,'view_review','Can view review');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL);
INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$870000$L4XnMxdrF5Sap3syafzilb$dOtbDMsaKPTZnJmcLrULuJzCg7h0XV+nz1KqDHFYPXY=','2024-10-04 13:32:14.591149',1,'zbedatw','','',1,1,'2024-09-15 14:52:00.399397','');
INSERT INTO auth_user VALUES(3,'pbkdf2_sha256$870000$utfLK58VnJbgACOyXy59VH$DBiBqbw9LLL0J8XBawnTVNvPqLaxhi3sWZPyM6C/Xlk=',NULL,0,'mani','','',0,1,'2024-09-20 12:38:55.681517','');
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('e70jasjxsv0wc7wae0ldx70vl1zyjb5f','.eJxVjDsOwjAQRO_iGln-O6akzxms9XqDA8iW4qRC3J1ESgHlzHszbxZhW0vcOi1xzuzKJLv8dgnwSfUA-QH13ji2ui5z4ofCT9r52DK9bqf7d1Cgl33tg5UDgkzS4aQnnSlopSAoYdSeDREaYZ0NQrkcNJAmkGg84uDRacM-X9jbN6E:1spqcZ:b7-6zq_wCy3H2q2Q5Fg8QYN7N5AXxelL-aBu5SkT8tU','2024-09-29 14:53:03.129005');
INSERT INTO django_session VALUES('qrtqmgw8u3b2izj47qmc8qv115z4zwzp','e30:1ssmLB:nS2zDX3JckkO2zILeUeA3sFWrU8E1yMhmg6mtUbIQgg','2024-10-07 16:55:13.181141');
INSERT INTO django_session VALUES('4ycwxt5uaym699fh1tq82zkhs6u464ls','.eJxVjDsOwjAQRO_iGln-O6akzxms9XqDA8iW4qRC3J1ESgHlzHszbxZhW0vcOi1xzuzKJLv8dgnwSfUA-QH13ji2ui5z4ofCT9r52DK9bqf7d1Cgl33tg5UDgkzS4aQnnSlopSAoYdSeDREaYZ0NQrkcNJAmkGg84uDRacM-X9jbN6E:1suBXc:tEr0XL5tIwsFFkzV3CiF3wJcZ7_fZ8eBjEOxRKb2P9s','2024-10-11 14:01:52.245089');
INSERT INTO django_session VALUES('9dpw73huwqb0xvm6ri5i5w2iv2e5qv4l','.eJxVjDsOwjAQRO_iGln-O6akzxms9XqDA8iW4qRC3J1ESgHlzHszbxZhW0vcOi1xzuzKJLv8dgnwSfUA-QH13ji2ui5z4ofCT9r52DK9bqf7d1Cgl33tg5UDgkzS4aQnnSlopSAoYdSeDREaYZ0NQrkcNJAmkGg84uDRacM-X9jbN6E:1suS5x:EDU3d1lJrCU-okiRCi-WQI7AHGg2Hg-_KOYKqS7eHxc','2024-10-12 07:42:25.587710');
INSERT INTO django_session VALUES('1nadngoidpzfuz0lc0r3yyz8f8e88qdj','.eJxVjDsOwjAQRO_iGln-O6akzxms9XqDA8iW4qRC3J1ESgHlzHszbxZhW0vcOi1xzuzKJLv8dgnwSfUA-QH13ji2ui5z4ofCT9r52DK9bqf7d1Cgl33tg5UDgkzS4aQnnSlopSAoYdSeDREaYZ0NQrkcNJAmkGg84uDRacM-X9jbN6E:1suXM9:Ezu-SVWIF7ZfGOoHCwM2RsLsIbsl4fW-6M3yOHZzrxI','2024-10-12 13:19:29.681298');
INSERT INTO django_session VALUES('kweyyry27nltz8693pr3dyuvlh49qs11','.eJxVjDsOwjAQRO_iGln-O6akzxms9XqDA8iW4qRC3J1ESgHlzHszbxZhW0vcOi1xzuzKJLv8dgnwSfUA-QH13ji2ui5z4ofCT9r52DK9bqf7d1Cgl33tg5UDgkzS4aQnnSlopSAoYdSeDREaYZ0NQrkcNJAmkGg84uDRacM-X9jbN6E:1swiPm:nY-aAyXLsG63entn2B-laEXh_oEBi7L2Kv0kpSx7PPc','2024-10-18 13:32:14.609724');
CREATE TABLE IF NOT EXISTS "movies_review" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "rating" integer unsigned NOT NULL CHECK ("rating" >= 0), "comment" text NOT NULL, "movie_id" bigint NOT NULL REFERENCES "movies_movie" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO movies_review VALUES(10,5,'OMG!!! one of the best, i forgot, i saw all the episodes from 1 to 5',3,1);
INSERT INTO movies_review VALUES(11,4,'batman, one of the best action movies i love, ever and ever',2,1);
INSERT INTO movies_review VALUES(12,4,'duplicated movie, i never understand but i like it you dont know how i''am happy when i watch it',5,1);
INSERT INTO movies_review VALUES(13,5,'fantastic movie one of the best',1,1);
CREATE TABLE IF NOT EXISTS "movies_movie" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "description" text NOT NULL, "director" varchar(30) NOT NULL, "actors" text NOT NULL, "year" varchar(4) NOT NULL, "thumb" varchar(100) NOT NULL, "trailer_url" varchar(200) NULL);
INSERT INTO movies_movie VALUES(1,'The Shawshank Redemption','The film tells the story of banker Andy Dufresne (Tim Robbins), who is sentenced to life in Shawshank State Penitentiary for the murders of his wife and her lover, despite his claims of innocence. Over the following two decades, he befriends a fellow prisoner, contraband smuggler Ellis "Red" Redding (Morgan Freeman), and becomes instrumental in a money laundering operation led by the prison warden Samuel Norton (Bob Gunton). William Sadler, Clancy Brown, Gil Bellows, and James Whitmore appear in supporting roles to get his freedom.','Frank Darabont','Tim Robbins, Morgan Freeman, Bob Gunton','1994','ShawshankRedemptionMoviePoster.jpg','https://www.youtube.com/watch?v=NmzuHjWmXOc&ab_channel=RottenTomatoesClassicTrailers');
INSERT INTO movies_movie VALUES(2,'The Dark Knight','The Dark Knight is a 2008 superhero film directed by Christopher Nolan, from a screenplay co-written with his brother Jonathan. Based on the DC Comics superhero Batman, it is the sequel to Batman Begins (2005), and the second installment in The Dark Knight trilogy. The plot follows the vigilante Batman, police lieutenant James Gordon, and district attorney Harvey Dent, who form an alliance to dismantle organized crime in Gotham City. Their efforts are derailed by the Joker, an anarchistic mastermind who seeks to test how far Batman will go to save the city from chaos. The ensemble cast includes Christian Bale, Michael Caine, Heath Ledger, Gary Oldman, Aaron Eckhart, Maggie Gyllenhaal, and Morgan Freeman.','Christopher Nolan','Christian Bale, Heath Ledger, Aaron Eckhart','2008','The_Dark_Knight.jpg','https://www.youtube.com/watch?v=EXeTwQWrcwY&ab_channel=RottenTomatoesClassicTrailers');
INSERT INTO movies_movie VALUES(3,'The Lord of the Rings: The Return of the King','The Lord of the Rings: The Return of the King is a 2003 epic high fantasy adventure film directed by Peter Jackson from a screenplay by Fran Walsh, Philippa Boyens, and Jackson. It is based on 1955''s The Return of the King, the third volume of the novel The Lord of the Rings by J. R. R. Tolkien. The sequel to 2002''s The Lord of the Rings: The Two Towers, the film is the third and final instalment in The Lord of the Rings trilogy. It features an ensemble cast including Elijah Wood, Ian McKellen, Liv Tyler, Viggo Mortensen, Sean Astin, and other to make their final way toward Mount Doom to destroy the One Ring, unaware of Gollum''s true intentions, while Merry, Pippin, Gandalf, Aragorn, Legolas, Gimli and their allies join forces against Sauron and his legions from Mordor.','Peter Jackson','Elijah Wood, Viggo Mortensen, Ian McKellen','2003','Lord_Rings_Return_King.jpg','https://www.youtube.com/watch?v=r5X-hFf6Bwo&ab_channel=Movieclips');
INSERT INTO movies_movie VALUES(4,'Schindler''s List','Schindler''s List is a 1993 American epic historical drama film directed and produced by Steven Spielberg and written by Steven Zaillian. It is based on the 1982 novel Schindler''s Ark by Thomas Keneally. The film follows Oskar Schindler, a German industrialist who saved more than a thousand mostly Polish–Jewish refugees from the Holocaust by employing them in his factories during World War II. It stars Liam Neeson as Schindler, Ralph Fiennes as SS officer Amon Göth, and Ben Kingsley as Schindler''s Jewish accountant Itzhak Stern.','Steven Spielberg','Liam Neeson, Ralph Fiennes, Ben Kingsley','1993','Schindlers_List_movie.jpg','https://www.youtube.com/watch?v=mxphAlJID9U&ab_channel=UniversalPictures');
INSERT INTO movies_movie VALUES(5,'Inception','Inception is a 2010 science fiction action film[4][5][6] written and directed by Christopher Nolan, who also produced it with Emma Thomas, his wife. The film stars Leonardo DiCaprio as a professional thief who steals information by infiltrating the subconscious of his targets. He is offered a chance to have his criminal history erased as payment for the implantation of another person''s idea into a target''s subconscious.[7] The ensemble cast includes Ken Watanabe, Joseph Gordon-Levitt, Marion Cotillard, Elliot Page,[a] Tom Hardy, Cillian Murphy, Tom Berenger, Dileep Rao, and Michael Caine.','Christopher Nolan','Leonardo DiCaprio, Joseph Gordon,-Levitt, Elliot Page','2010','Inception_2010_theatrical_poster.jpg','https://www.youtube.com/watch?v=YoHD9XEInc0&ab_channel=RottenTomatoesClassicTrailers');
INSERT INTO sqlite_sequence VALUES('django_migrations',23);
INSERT INTO sqlite_sequence VALUES('django_admin_log',33);
INSERT INTO sqlite_sequence VALUES('django_content_type',8);
INSERT INTO sqlite_sequence VALUES('auth_permission',32);
INSERT INTO sqlite_sequence VALUES('auth_group',0);
INSERT INTO sqlite_sequence VALUES('auth_user',4);
INSERT INTO sqlite_sequence VALUES('movies_review',15);
INSERT INTO sqlite_sequence VALUES('movies_movie',5);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE UNIQUE INDEX "movies_review_movie_id_user_id_cd6621ba_uniq" ON "movies_review" ("movie_id", "user_id");
CREATE INDEX "movies_review_movie_id_3f8bd27f" ON "movies_review" ("movie_id");
CREATE INDEX "movies_review_user_id_4e16f57e" ON "movies_review" ("user_id");
COMMIT;
